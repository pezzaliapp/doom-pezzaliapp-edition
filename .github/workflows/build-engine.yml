name: Build DoomGeneric (WASM) → /engine

on:
  workflow_dispatch:
  push:
    paths:
      - ".github/workflows/build-engine.yml"

permissions:
  contents: write

concurrency:
  group: build-engine
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Emscripten (emsdk)
        uses: mymindstorm/setup-emsdk@v14
        with:
          version: latest

      - name: Show Emscripten versions
        run: |
          emcc -v || true
          emcmake -v || true

      - name: Install build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build python3

      - name: Clone DoomGeneric
        run: |
          git clone --depth=1 https://github.com/ozkl/doomgeneric.git doomgeneric

      # Configuriamo la variante WASM (usa SDL2 via ports Emscripten)
      - name: Configure (emcmake)
        working-directory: doomgeneric
        run: |
          cmake -E make_directory build-wasm
          emcmake cmake -S . -B build-wasm -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DPLATFORM=WASM \
            -DCMAKE_C_FLAGS="-sUSE_SDL=2 -sALLOW_MEMORY_GROWTH=1" \
            -DCMAKE_CXX_FLAGS="-sUSE_SDL=2 -sALLOW_MEMORY_GROWTH=1" \
            -DCMAKE_EXE_LINKER_FLAGS="-sUSE_SDL=2 -sALLOW_MEMORY_GROWTH=1"

      - name: Build (emmake ninja)
        working-directory: doomgeneric
        run: |
          emmake ninja -C build-wasm -v

      - name: Locate wasm/js artifacts (doomgeneric)
        id: out
        shell: bash
        run: |
          set -e
          ROOT="doomgeneric/build-wasm"
          echo "== candidate JS =="
          find "$ROOT" -type f -name "*.js"   -printf "%10s  %p\n" | sort -nr || true
          echo "== candidate WASM =="
          find "$ROOT" -type f -name "*.wasm" -printf "%10s  %p\n" | sort -nr || true

          JS=$(find "$ROOT" -type f -name "*.js"   -printf "%s %p\n" | sort -nr | awk 'NR==1{print $2}')
          WASM=$(find "$ROOT" -type f -name "*.wasm" -printf "%s %p\n" | sort -nr | awk 'NR==1{print $2}')
          if [ -z "$JS" ] || [ -z "$WASM" ]; then
            echo "❌ Nessun .js/.wasm trovato. Controlla i log sopra."
            exit 1
          fi
          echo "js=$JS"     >> "$GITHUB_OUTPUT"
          echo "wasm=$WASM" >> "$GITHUB_OUTPUT"
          echo "✅ Selezionati: $JS  /  $WASM"

      - name: Copy to /engine
        shell: bash
        run: |
          set -e
          mkdir -p engine
          cp "${{ steps.out.outputs.js }}"   engine/engine.js
          cp "${{ steps.out.outputs.wasm }}" engine/engine.wasm
          ls -lh engine/

      - name: Commit updated engine
        shell: bash
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add engine/engine.js engine/engine.wasm
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "chore(engine): build DoomGeneric WASM"
          git push
