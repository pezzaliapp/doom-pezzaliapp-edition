name: Build Chocolate Doom (WASM) â†’ /engine

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Emscripten SDK
        run: |
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          ./emsdk install latest
          ./emsdk activate latest
          source ./emsdk_env.sh
        shell: bash

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential automake autoconf libtool pkg-config libsdl2-dev libsdl2-mixer-dev

      - name: Clone Chocolate Doom
        run: |
          git clone https://github.com/chocolate-doom/chocolate-doom.git
          cd chocolate-doom
          ./bootstrap

      - name: Configure (Emscripten)
        run: |
          source emsdk/emsdk_env.sh
          cd chocolate-doom
          emconfigure ./configure --disable-opengl --enable-sdl2

      - name: Build (WASM target)
        run: |
          source emsdk/emsdk_env.sh
          cd chocolate-doom
          emmake make
        shell: bash

      - name: Locate wasm/js artifacts
        run: |
          echo "Search for build outputs..."
          find chocolate-doom -type f \( -name "*.wasm" -o -name "*.js" \)
          mkdir -p engine
          WASM_FILE=$(find chocolate-doom -type f -name "*.wasm" | head -n 1)
          JS_FILE=$(find chocolate-doom -type f -name "*.js" | head -n 1)
          if [ -f "$WASM_FILE" ]; then cp "$WASM_FILE" engine/doom.wasm; fi
          if [ -f "$JS_FILE" ]; then cp "$JS_FILE" engine/doom.js; fi
          ls -lh engine || true

      - name: Commit updated engine
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add engine/doom.*
          git commit -m "Update /engine (WASM build)"
          git push
        continue-on-error: true
